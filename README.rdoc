= OSCAccess

A simple object-oriented way to bind {OSC}[http://en.wikipedia.org/wiki/Open_Sound_Control] to Ruby classes and objects.

== Features

* Minimal configuration of network resources even when shared or multiplexed
* Bind OSC events at class definition; using instance methods; or by passing in a Hash map
* Shortcuts for common tasks associated with OSC such as translating numeric values from one range to another

== Requirements

Requires {eventmachine}[http://github.com/eventmachine/eventmachine] and {osc-ruby}[http://github.com/aberant/osc-ruby] which should install automatically with the gem

== Installation

  gem install osc-access
  
== Usage

In this script, when OSC messages for <em>/1/fader1</em> are received, <em>velocity=</em> is called 

  class Instrument
  
    include OSCAccessible

    osc_receive("/1/fader1", :translate => { :remote => 0..1, :local => 0..127 }) do |instance, val|
      instance.velocity = val
    end
  
    def velocity=(val)
      puts "setting velocity to #{val}"
    end
  
  end

  i = Instrument.new
  i.osc_start(:input_port => 8000).join  

The <em>:translate</em> option means that the first OSC argument will be translated from a number between 0 to 1 to the analogous value between 0 and 127 before being passed to the code block.

== Other Documentation

* {rdoc}[http://rubydoc.info/github/arirusso/osc-access] 

== License

Licensed under Apache 2.0, See the file LICENSE

Copyright Â© 2011 Ari Russo
