= OSCAccess

OSCAccess provides a simple way to turn a Ruby object into a multiplexing {OSC}[http://en.wikipedia.org/wiki/Open_Sound_Control] node

Declaratively bind an object's methods or instance variables to OSC events.  Declaration can be done during class definition, by calling instance methods, or by passing in a Hash map.

== Requirements

Requires {eventmachine}[http://github.com/eventmachine/eventmachine] and {osc-ruby}[http://github.com/aberant/osc-ruby] which should install automatically with the gem

== Installation

  gem install osc-access
  
== Usage

In this script, when OSC messages for <em>/1/fader1</em> are received, <em>velocity=</em> is called 

  class Instrument
  
    include OSCAccessible

    osc_receive "/1/fader1" do |instance, msg|
      val = instance.osc_translate(msg.args.first, :local => 0..127, :remote => 0..1 )
      instance.velocity = val
    end
  
    def velocity=(val)
      puts "setting velocity to #{val}"
    end
  
  end

  i = Instrument.new
  i.osc_start(:input_port => 8000).join  

The <em>osc_translate</em> method in this case takes the first OSC argument and translates it from a number between 0 to 1 to the analogous value between 0 and 127

Input is initiated by specifying an input port as in the example.  OSC server/client sharing and management is invisible to the user.

== Other Documentation

* {rdoc}[http://rubydoc.info/github/arirusso/osc-access] 

== License

Licensed under Apache 2.0, See the file LICENSE

Copyright Â© 2011 Ari Russo
