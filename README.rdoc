= OSC Access

A simple way to bind {OSC}[http://en.wikipedia.org/wiki/Open_Sound_Control] directly to Ruby classes and objects.

== Features

* Binding OSC events can be done by class or by instance
* Network resources are invisible to the user even when shared or multiplexed
* Shortcuts for common tasks associated with OSC such as translating numeric values from one range to another

== Requirements

Requires {eventmachine}[http://github.com/eventmachine/eventmachine] and {osc-ruby}[http://github.com/aberant/osc-ruby] which should install automatically with the gem

== Installation

  gem install osc-access
  
== Usage

In this example when OSC messages for <em>/1/fader1</em> are received, <em>velocity=</em> is called and another message is outputted confirming that the first message was received

  class Instrument
  
    include OSCAccessible

    osc_receive("/1/fader1", :translate => { :remote => 0..1, :local => 0..127 }) do |instance, val|
      instance.velocity = val
      instance.osc_send("/receipt", "val set to #{val}")
    end
  
    def velocity=(val)
      puts "setting velocity to #{val}"
    end
  
  end

  i = Instrument.new
  i.osc_start(:input_port => 8000, :output => { :host => "192.168.1.8", :port => 9000}).join  

The <em>:translate</em> option means that the first OSC argument will be translated from a number between 0 to 1 to the analogous value between 0 and 127 before being passed to the code block.

Or, here is an example that produces the same object, but it's created by passing a Hash map to the instance:

  map = {
    "/1/fader1" => { 
      :translate => { :remote => 0..1, :local => 0..127 }
      :action => Proc.new do |instance, val| 
        instance.pitch = val
        instance.osc_send("/receipt", "val set to #{val}")
      end
    }
  }
  
  class Instrument
  
    include OSCAccessible
  
    def pitch=(val)
      p "setting pitch to #{val}"
      ...
    end

  end

  i = Instrument.new
  i.osc_start(:map => map, :input_port => 8000, :output => { :host => "192.168.1.8", :port => 9000}).join
  
{Here's a blog post}[] that explains these examples and more in further depth.

== Other Documentation

* {rdoc}[http://rubydoc.info/github/arirusso/osc-access] 

== License

Licensed under Apache 2.0, See the file LICENSE

Copyright ©2011 Ari Russo